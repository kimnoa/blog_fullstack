{"ast":null,"code":"var _jsxFileName = \"/Users/noa/Documents/java/front/src/layouts/Header/index.tsx\",\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from \"../../constant\";\nimport { useCookies } from \"react-cookie\";\nimport { useBoardStore, useLoginUserStore } from \"../../stores\";\nimport { fileUploadRequest, patchBoardRequest, postBoardRequest } from \"../../apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//  component: 헤더 레이아웃\nexport default function Header() {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  // state: 로그인 유저 상태\n  const {\n    loginUser,\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n\n  // state: path 상태\n  const {\n    pathname\n  } = useLocation();\n\n  // state: cookie 상태\n  const [cookies, setCookie] = useCookies();\n\n  // state: 로그인 상태\n  const [isLogin, setLogin] = useState(false);\n\n  // state: 인증 페이지 상태\n  const [isAuthPage, setAuthPage] = useState(false);\n  // state: 메인 페이지 상태\n  const [isMainPage, setMainPage] = useState(false);\n  // state: 검색 페이지 상태\n  const [isSearchPage, setSearchPage] = useState(false);\n  // state: 게시물 상세 페이지 상태\n  const [isBoardDetailPage, setBoardDetailPage] = useState(false);\n  // state: 게시물 작성 페이지 상태\n  const [isBoardWritePage, setBoardWritePage] = useState(false);\n  // state: 게시물 수정 페이지 상태\n  const [isBoardUpdatePage, setBoardUpdatePage] = useState(false);\n  // state: 사용자 페이지 상태\n  const [isUserPage, setUserPage] = useState(false);\n\n  // function: 네비게이트 함수\n  const navigate = useNavigate();\n\n  // event handler: 로고 클릭 이벤트 처리 함수\n  const onClickHandler = () => {\n    navigate(MAIN_PATH());\n  };\n\n  // component: 검색 버튼 컴포넌트\n  const SearchButton = () => {\n    _s();\n    // state: 검색 버튼 요소 참조 상태\n    const searchButtonRef = useRef(null);\n\n    // state: 검색 버튼 상태\n    const [status, setStatus] = useState(false);\n\n    // state: 검색어 상태\n    const [word, setWord] = useState('');\n\n    // state: 검색어 path variable 상태\n    const {\n      searchWord\n    } = useParams();\n\n    // event handler: 검색어 변경 이벤트 처리 함수\n    const onSearchWordChangeHandler = event => {\n      const value = event.target.value;\n      setWord(value);\n    };\n\n    // event handler: 검색어 키 이벤트 처리 함수\n    const onSearchWordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!searchButtonRef.current) return;\n      searchButtonRef.current.click();\n    };\n\n    // event handler: 검색 버튼 클릭 이벤트 처리 함수\n    const onSearchButtonClickHandler = () => {\n      if (!status) {\n        setStatus(!status);\n        return;\n      }\n      navigate(SEARCH_PATH(word));\n    };\n\n    // effect: 검색어 path variable 변경 될때마다 실행될 함수\n    useEffect(() => {\n      if (searchWord) {\n        setWord(searchWord);\n        setStatus(true);\n      }\n    }, [searchWord]);\n    if (!status)\n      // render: 검색 버튼 컴포넌트 랜더링 (클릭 false 상태)\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this);\n\n    // render: 검색 버튼 컴포넌트 랜더링 (클릭 true 상태)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-search-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"header-search-input\",\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: word,\n        onChange: onSearchWordChangeHandler,\n        onKeyDown: onSearchWordKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: searchButtonRef,\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  };\n\n  //component: 로그인 또는 마이페이지 버튼 컴포넌트\n  _s(SearchButton, \"ueLJ4yRKrTYZk4N3fc964Ys93IA=\", false, function () {\n    return [useParams];\n  });\n  const LoginMyPageButton = () => {\n    _s2();\n    // state: userEmail path variable 상태\n    const {\n      userEmail\n    } = useParams();\n\n    // event handler: 마이페이지 버튼 클릭 이벤트 처리 함수\n    const onMypageButtonClickHandler = () => {\n      if (!loginUser) return;\n      const {\n        email\n      } = loginUser;\n      navigate(USER_PATH(email));\n    };\n\n    // event handler: 로그아웃 버튼 클릭 이벤트 처리 함수\n    const onSignOutButtonClickHandler = () => {\n      resetLoginUser();\n      setCookie('accessToken', '', {\n        path: MAIN_PATH(),\n        expires: new Date()\n      });\n      navigate(MAIN_PATH());\n    };\n    // event handler: 로그인 버튼 클릭 이벤트 처리 함수\n    const onSignInButtonClickHandler = () => {\n      navigate(AUTH_PATH());\n    };\n\n    // render: 로그아웃 버튼 컴포넌트 랜더링\n    if (isLogin && userEmail === (loginUser === null || loginUser === void 0 ? void 0 : loginUser.email)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onSignOutButtonClickHandler,\n      children: 'Logout'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 16\n    }, this);\n\n    // render: 마이페이지 버튼 컴포넌트 랜더링\n    if (isLogin) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onMypageButtonClickHandler,\n      children: 'MyPage'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 20\n    }, this);\n\n    // render: 로그인 버튼 컴포넌트 랜더링\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onSignInButtonClickHandler,\n      children: 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }, this);\n  };\n\n  // component: 업로드 버튼 컴포넌트\n  _s2(LoginMyPageButton, \"Va/HwuGsR2I6hAyKIaOosu2dpA4=\", false, function () {\n    return [useParams];\n  });\n  const UploadButton = () => {\n    _s3();\n    //state: 게시물 상태\n    const {\n      title,\n      content,\n      boardImageFileList,\n      resetBoard\n    } = useBoardStore();\n\n    // function: post board response 처리 함수\n    const postBoardResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === 'AF' || code === 'NU') navigate(AUTH_PATH());\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'VF') alert('제목과 내용을 입력해주세요.');\n      if (code !== 'SU') return;\n      resetBoard();\n      if (!loginUser) return;\n      const {\n        email\n      } = loginUser;\n      navigate(USER_PATH(email));\n    };\n\n    // event handler: 업로드 버튼 클릭 이벤트 처리 함수\n    const onUploadButtonClickHandler = async () => {\n      const accessToken = cookies.accessToken;\n      if (!accessToken) return;\n      const boardImageList = [];\n      for (const file of boardImageFileList) {\n        const data = new FormData();\n        data.append('file', file);\n        const url = await fileUploadRequest(data);\n        if (url) boardImageList.push(url);\n      }\n      const isWriterPage = pathname.includes(BOARD_WRITE_PATH());\n      if (isWriterPage) {\n        const requestBody = {\n          title,\n          content,\n          boardImageList\n        };\n        postBoardRequest(requestBody, accessToken).then(postBoardResponse);\n      } else {\n        const requestBody = {\n          title,\n          content,\n          boardImageList\n        };\n        patchBoardRequest(boardNumber, requestBody, accessToken).then(patchBoardResponse);\n      }\n    };\n\n    // render: 업로드 버튼 컴포넌트 랜더링\n    if (title && content) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onUploadButtonClickHandler,\n      children: 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 16\n    }, this);\n\n    // render: 업로드 불가 버튼 컴포넌트 랜더링\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disable-button\",\n      onClick: onUploadButtonClickHandler,\n      children: 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 16\n    }, this);\n  };\n\n  // effect: path가 변경할 때마다 실행할 함수\n  _s3(UploadButton, \"RRM1ohTaAta3JeaNErZmbEkNqfM=\", false, function () {\n    return [useBoardStore];\n  });\n  useEffect(() => {\n    const isAuthPage = pathname === AUTH_PATH();\n    setAuthPage(isAuthPage);\n    const isMainPage = pathname === MAIN_PATH();\n    setMainPage(isMainPage);\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(''));\n    setSearchPage(isSearchPage);\n    const isBoardDetailPage = pathname.includes(BOARD_DETAIL_PATH(''));\n    setBoardDetailPage(isBoardDetailPage);\n    const isBoardWritePage = pathname.includes(BOARD_WRITE_PATH());\n    setBoardWritePage(isBoardWritePage);\n    const isBoardUpdatePage = pathname.includes(BOARD_UPDATE_PATH(''));\n    setBoardUpdatePage(isBoardUpdatePage);\n    const isUserPage = pathname.startsWith(USER_PATH(''));\n    setUserPage(isUserPage);\n  }, [pathname]);\n  // console.log(isAuthPage);\n\n  // effect: 로그인 유저가 변경될 때마다 실행될 함수\n  useEffect(() => {\n    setLogin(loginUser !== null);\n  }, [loginUser]);\n\n  // render: 헤더 레이아웃 랜더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left-box\",\n        onClick: onClickHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon logo-dark-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: 'Kim\\'s Board'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right-box\",\n        children: [(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && /*#__PURE__*/_jsxDEV(SearchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 89\n        }, this), (isMainPage || isSearchPage || isBoardDetailPage || isUserPage) && /*#__PURE__*/_jsxDEV(LoginMyPageButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 89\n        }, this), (isBoardWritePage || isBoardUpdatePage) && /*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n}\n_s4(Header, \"ulRUQBe6ZArnnM4Gwh107JEZc8Q=\", false, function () {\n  return [useLoginUserStore, useLocation, useCookies, useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","useParams","AUTH_PATH","BOARD_DETAIL_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useCookies","useBoardStore","useLoginUserStore","fileUploadRequest","patchBoardRequest","postBoardRequest","jsxDEV","_jsxDEV","Header","_s4","_s","$RefreshSig$","_s2","_s3","loginUser","setLoginUser","resetLoginUser","pathname","cookies","setCookie","isLogin","setLogin","isAuthPage","setAuthPage","isMainPage","setMainPage","isSearchPage","setSearchPage","isBoardDetailPage","setBoardDetailPage","isBoardWritePage","setBoardWritePage","isBoardUpdatePage","setBoardUpdatePage","isUserPage","setUserPage","navigate","onClickHandler","SearchButton","searchButtonRef","status","setStatus","word","setWord","searchWord","onSearchWordChangeHandler","event","value","target","onSearchWordKeyDownHandler","key","current","click","onSearchButtonClickHandler","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","ref","LoginMyPageButton","userEmail","onMypageButtonClickHandler","email","onSignOutButtonClickHandler","path","expires","Date","onSignInButtonClickHandler","UploadButton","title","content","boardImageFileList","resetBoard","postBoardResponse","responseBody","code","alert","onUploadButtonClickHandler","accessToken","boardImageList","file","data","FormData","append","url","push","isWriterPage","includes","requestBody","then","boardNumber","patchBoardResponse","startsWith","id","_c","$RefreshReg$"],"sources":["/Users/noa/Documents/java/front/src/layouts/Header/index.tsx"],"sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useEffect, useRef, useState} from \"react\";\nimport \"./style.css\";\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport {\n    AUTH_PATH,\n    BOARD_DETAIL_PATH,\n    BOARD_PATH,\n    BOARD_UPDATE_PATH,\n    BOARD_WRITE_PATH,\n    MAIN_PATH,\n    SEARCH_PATH,\n    USER_PATH\n} from \"../../constant\";\nimport {useCookies} from \"react-cookie\";\nimport {useBoardStore, useLoginUserStore} from \"../../stores\";\nimport {fileUploadRequest, patchBoardRequest, postBoardRequest} from \"../../apis\";\nimport {PostBoardRequestDto} from \"../../apis/request/board\";\nimport {PostBoardResponseDto} from \"../../apis/response/board\";\nimport {ResponseDto} from \"../../apis/response\";\nimport PatchBoardRequestDto from \"apis/request/board/patch-board.request.dto\";\n\n//  component: 헤더 레이아웃\nexport default function Header() {\n\n\n    // state: 로그인 유저 상태\n    const {loginUser, setLoginUser, resetLoginUser} = useLoginUserStore();\n\n    // state: path 상태\n    const {pathname}=useLocation();\n\n    // state: cookie 상태\n    const [cookies,setCookie] = useCookies();\n\n    // state: 로그인 상태\n    const [isLogin, setLogin] = useState<boolean>(false);\n\n    // state: 인증 페이지 상태\n    const [isAuthPage, setAuthPage] = useState<boolean>(false);\n    // state: 메인 페이지 상태\n    const [isMainPage, setMainPage] = useState<boolean>(false);\n    // state: 검색 페이지 상태\n    const [isSearchPage, setSearchPage] = useState<boolean>(false);\n    // state: 게시물 상세 페이지 상태\n    const [isBoardDetailPage, setBoardDetailPage] = useState<boolean>(false);\n    // state: 게시물 작성 페이지 상태\n    const [isBoardWritePage, setBoardWritePage] = useState<boolean>(false);\n    // state: 게시물 수정 페이지 상태\n    const [isBoardUpdatePage, setBoardUpdatePage] = useState<boolean>(false);\n    // state: 사용자 페이지 상태\n    const [isUserPage, setUserPage] = useState<boolean>(false);\n\n    // function: 네비게이트 함수\n    const navigate = useNavigate();\n\n    // event handler: 로고 클릭 이벤트 처리 함수\n    const onClickHandler = () => {\n        navigate(MAIN_PATH());\n    }\n\n    // component: 검색 버튼 컴포넌트\n    const SearchButton = () => {\n\n        // state: 검색 버튼 요소 참조 상태\n        const searchButtonRef = useRef<HTMLDivElement | null>(null);\n\n        // state: 검색 버튼 상태\n        const [status, setStatus] = useState<boolean>(false);\n\n        // state: 검색어 상태\n        const [word, setWord] = useState<string>('');\n\n        // state: 검색어 path variable 상태\n        const {searchWord} = useParams();\n\n        // event handler: 검색어 변경 이벤트 처리 함수\n        const onSearchWordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n            const value = event.target.value;\n            setWord(value);\n        };\n\n        // event handler: 검색어 키 이벤트 처리 함수\n        const onSearchWordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n            if (event.key !== 'Enter') return;\n            if (!searchButtonRef.current) return;\n            searchButtonRef.current.click();\n        };\n\n        // event handler: 검색 버튼 클릭 이벤트 처리 함수\n        const onSearchButtonClickHandler = () => {\n\n            if (!status){\n                setStatus(!status);\n                return;\n            }\n            navigate(SEARCH_PATH(word));\n\n        };\n\n        // effect: 검색어 path variable 변경 될때마다 실행될 함수\n        useEffect(() => {\n            if (searchWord){\n                setWord(searchWord);\n                setStatus(true);\n\n            }\n\n        }, [searchWord]);\n\n        if (!status)\n        // render: 검색 버튼 컴포넌트 랜더링 (클릭 false 상태)\n\n        return (\n            <div className='icon-button' onClick={onSearchButtonClickHandler}>\n                <div className='icon search-light-icon'></div>\n            </div>\n        );\n\n        // render: 검색 버튼 컴포넌트 랜더링 (클릭 true 상태)\n\n        return (\n            <div className='header-search-input-box'>\n                <input className='header-search-input' type='text' placeholder='검색어를 입력해주세요.' value={word} onChange={onSearchWordChangeHandler} onKeyDown={onSearchWordKeyDownHandler}/>\n                <div ref={searchButtonRef} className='icon-button' onClick={onSearchButtonClickHandler}>\n                    <div className='icon search-light-icon'></div>\n                </div>\n            </div>\n        );\n    }\n\n    //component: 로그인 또는 마이페이지 버튼 컴포넌트\n    const LoginMyPageButton = () => {\n\n        // state: userEmail path variable 상태\n        const {userEmail} = useParams();\n\n\n        // event handler: 마이페이지 버튼 클릭 이벤트 처리 함수\n        const onMypageButtonClickHandler = () => {\n            if (!loginUser) return;\n            const {email} = loginUser;\n            navigate(USER_PATH(email));\n        };\n\n        // event handler: 로그아웃 버튼 클릭 이벤트 처리 함수\n        const onSignOutButtonClickHandler = () => {\n            resetLoginUser();\n            setCookie('accessToken', '', {path: MAIN_PATH(), expires: new Date()});\n            navigate(MAIN_PATH());\n        };\n        // event handler: 로그인 버튼 클릭 이벤트 처리 함수\n        const onSignInButtonClickHandler = () => {\n            navigate(AUTH_PATH());\n        };\n\n        // render: 로그아웃 버튼 컴포넌트 랜더링\n        if (isLogin && userEmail === loginUser?.email)\n        return <div className='white-button' onClick={onSignOutButtonClickHandler}>{'Logout'}</div>;\n\n            // render: 마이페이지 버튼 컴포넌트 랜더링\n        if (isLogin)\n            return <div className='white-button' onClick={onMypageButtonClickHandler}>{'MyPage'}</div>;\n\n        // render: 로그인 버튼 컴포넌트 랜더링\n        return <div className='black-button' onClick={onSignInButtonClickHandler}>{'Login'}</div>;\n    };\n\n    // component: 업로드 버튼 컴포넌트\n    const UploadButton = () => {\n\n        //state: 게시물 상태\n        const {title, content, boardImageFileList, resetBoard} = useBoardStore();\n\n        // function: post board response 처리 함수\n        const postBoardResponse = (responseBody: PostBoardResponseDto | ResponseDto | null) => {\n            if (!responseBody) return;\n            const {code} = responseBody;\n            if (code === 'AF' || code === 'NU') navigate(AUTH_PATH());\n            if (code === 'DBE') alert('데이터베이스 오류입니다.');\n            if (code === 'VF') alert('제목과 내용을 입력해주세요.');\n            if (code !== 'SU') return;\n\n            resetBoard();\n            if (!loginUser) return;\n            const {email} = loginUser;\n            navigate(USER_PATH(email));\n\n        }\n\n\n        // event handler: 업로드 버튼 클릭 이벤트 처리 함수\n        const onUploadButtonClickHandler = async () => {\n            const accessToken = cookies.accessToken;\n            if (!accessToken) return;\n\n            const boardImageList: string[] = [];\n\n            for (const file of boardImageFileList) {\n                const data = new FormData();\n                data.append('file', file);\n\n                const url = await fileUploadRequest(data);\n                if (url) boardImageList.push(url);\n            }\n\n            const isWriterPage = pathname.includes(BOARD_WRITE_PATH());\n            if (isWriterPage) {\n                const requestBody: PostBoardRequestDto = {\n                    title, content, boardImageList\n                }\n                postBoardRequest(requestBody, accessToken).then(postBoardResponse);\n            \n            } else {\n                const requestBody: PatchBoardRequestDto = {\n                    title, content, boardImageList\n                }\n                patchBoardRequest(boardNumber, requestBody, accessToken).then(patchBoardResponse);\n            }\n\n            };\n\n        // render: 업로드 버튼 컴포넌트 랜더링\n        if (title && content)\n        return <div className='black-button' onClick={onUploadButtonClickHandler}>{'Upload'}</div>;\n\n        // render: 업로드 불가 버튼 컴포넌트 랜더링\n        return <div className='disable-button' onClick={onUploadButtonClickHandler}>{'Upload'}</div>;\n    }\n\n\n    // effect: path가 변경할 때마다 실행할 함수\n    useEffect(() => {\n\n        const isAuthPage = pathname === AUTH_PATH();\n        setAuthPage(isAuthPage);\n        const isMainPage = pathname === MAIN_PATH();\n        setMainPage(isMainPage);\n        const isSearchPage = pathname.startsWith(SEARCH_PATH(''));\n        setSearchPage(isSearchPage);\n        const isBoardDetailPage = pathname.includes(BOARD_DETAIL_PATH(''));\n        setBoardDetailPage(isBoardDetailPage);\n        const isBoardWritePage = pathname.includes(BOARD_WRITE_PATH());\n        setBoardWritePage(isBoardWritePage);\n        const isBoardUpdatePage = pathname.includes(BOARD_UPDATE_PATH(''));\n        setBoardUpdatePage(isBoardUpdatePage);\n        const isUserPage = pathname.startsWith(USER_PATH(''));\n        setUserPage(isUserPage);\n    }, [pathname]);\n    // console.log(isAuthPage);\n\n    // effect: 로그인 유저가 변경될 때마다 실행될 함수\n    useEffect(() => {\n        setLogin(loginUser !== null);\n    }, [loginUser]);\n\n\n    // render: 헤더 레이아웃 랜더링\n    return (\n        <div id='header'>\n            <div className='header-container'>\n                <div className='header-left-box' onClick={onClickHandler}>\n                    <div className='icon-box'>\n                        <div className='icon logo-dark-icon'></div>\n                    </div>\n                    <div className='header-logo'>{'Kim\\'s Board'}</div>\n                </div>\n                <div className='header-right-box'>\n                    {(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && <SearchButton/>}\n                    {(isMainPage || isSearchPage || isBoardDetailPage || isUserPage) && <LoginMyPageButton/>}\n                    {(isBoardWritePage || isBoardUpdatePage) && <UploadButton/>}\n                    {/*<div className='pathname'>{pathname}</div>*/}\n                </div>\n            </div>\n        </div>\n            )\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}